#include "cxxtest/TestSuite.h"

#include "test9/Message.h"
#include "test9/message/Msg1.h"

class TestSuite : public CxxTest::TestSuite
{
public:
    void test1();

    using Interface =
        test9::Message<
            comms::option::app::IdInfoInterface,
            comms::option::app::ReadIterator<const std::uint8_t*>,
            comms::option::app::WriteIterator<std::uint8_t*>,
            comms::option::app::LengthInfoInterface,
            comms::option::app::ValidCheckInterface,
            comms::option::app::NameInterface,
            comms::option::app::RefreshInterface
        >;

    using Msg1 = test9::message::Msg1<Interface>;
};

void TestSuite::test1()
{
    Msg1 msg;
    TS_ASSERT(msg.field_f1().isNull());
    TS_ASSERT(msg.field_f1().valid());

    TS_ASSERT(msg.field_f2().valid());
    msg.field_f2().value() = std::numeric_limits<float>::lowest();
    TS_ASSERT_LESS_THAN(msg.field_f2().value(), 0.0);
    TS_ASSERT(msg.field_f2().valid());
    msg.field_f2().value() = std::numeric_limits<float>::quiet_NaN();
    TS_ASSERT(!msg.field_f2().valid());
    msg.field_f2().value() = std::numeric_limits<float>::infinity();
    TS_ASSERT(!msg.field_f2().valid());

    TS_ASSERT(msg.field_f3().valid());
    msg.field_f3().value() = 4.0;
    TS_ASSERT(!msg.field_f3().valid());
    msg.version() = 2U;
    TS_ASSERT(msg.refresh());
    TS_ASSERT(msg.field_f3().valid());
}
